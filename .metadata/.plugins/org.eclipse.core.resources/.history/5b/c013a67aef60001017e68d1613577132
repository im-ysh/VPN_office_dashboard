<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>OpenVPN Dashboard - Login</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        /* Full UI styling from your now.txt */
        /* [KEEPING CSS SAME AS YOUR NOW.TXT FILE] */
    </style>
</head>
<body>
    <!-- Entire HTML same as your now.txt -->
    <div class="login-container">
        <div class="logo">
            <h1>OpenVPN</h1>
            <p>Dashboard</p>
        </div>

        <div id="errorMessage" class="error-message" style="display:none;"></div>
        <div id="successMessage" class="success-message" style="display:none;"></div>

        <div class="auth-tabs">
            <div class="auth-tab active" onclick="switchTab('password')">Login</div>
            <div class="auth-tab" onclick="switchTab('register')">Register</div>
            <div class="auth-tab" onclick="switchTab('guest')">Guest</div>
        </div>

        <!-- Login Form -->
        <form id="passwordForm" class="auth-content active" onsubmit="handleLogin(event)">
            <div class="input-group">
                <label>Username</label>
                <input type="text" id="username" required>
            </div>
            <div class="input-group">
                <label>Password</label>
                <input type="password" id="password" required>
            </div>
            <button type="submit" class="login-btn">Sign In</button>
        </form>

        <!-- Register Form -->
        <form id="registerForm" class="auth-content" onsubmit="handleRegister(event)">
            <div class="input-group">
                <label>Username</label>
                <input type="text" id="reg_username" required>
            </div>
            <div class="input-group">
                <label>Email</label>
                <input type="email" id="reg_email" required>
            </div>
            <div class="input-group">
                <label>Password</label>
                <input type="password" id="reg_password" required>
            </div>
            <button type="submit" class="login-btn">Create Free Account</button>
        </form>

        <!-- Guest Form -->
        <div id="guestForm" class="auth-content">
            <p style="text-align:center;">Access VPN as Guest without registration.</p>
            <button onclick="handleGuestAccess()" class="login-btn">Start Free VPN Now</button>
        </div>
    </div>

    <script>
        const baseURL = "http://100.90.249.20:8080/vpn-backend";

        function switchTab(tab) {
            document.querySelectorAll('.auth-content').forEach(f => f.classList.remove('active'));
            document.querySelectorAll('.auth-tab').forEach(t => t.classList.remove('active'));
            document.querySelector(`#${tab}Form`)?.classList.add('active');
            document.querySelector(`.auth-tab:nth-child(${tab === 'password' ? 1 : tab === 'register' ? 2 : 3})`)?.classList.add('active');
            clearMessages();
        }

        function showError(msg) {
            document.getElementById('errorMessage').innerText = msg;
            document.getElementById('errorMessage').style.display = 'block';
            document.getElementById('successMessage').style.display = 'none';
        }

        function showSuccess(msg) {
            document.getElementById('successMessage').innerText = msg;
            document.getElementById('successMessage').style.display = 'block';
            document.getElementById('errorMessage').style.display = 'none';
        }

        function clearMessages() {
            document.getElementById('errorMessage').style.display = 'none';
            document.getElementById('successMessage').style.display = 'none';
        }

        async function handleLogin(event) {
            event.preventDefault();
            clearMessages();
            const username = document.getElementById("username").value;
            const password = document.getElementById("password").value;
            try {
                const res = await fetch(`${baseURL}/login`, {
                    method: 'POST',
                    headers: {'Content-Type': 'application/x-www-form-urlencoded'},
                    body: `username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}`
                });
                const data = await res.json();
                if (data.status === "success") {
                    showSuccess("Login successful!");
                    localStorage.setItem("username", username);
                    setTimeout(() => window.location.href = 'dashboard.html', 1000);
                } else {
                    showError(data.message || "Invalid credentials");
                }
            } catch {
                showError("Server error!");
            }
        }

        async function handleRegister(event) {
            event.preventDefault();
            clearMessages();
            const username = document.getElementById("reg_username").value;
            const email = document.getElementById("reg_email").value;
            const password = document.getElementById("reg_password").value;
            try {
                const res = await fetch(`${baseURL}/register`, {
                    method: 'POST',
                    headers: {'Content-Type': 'application/x-www-form-urlencoded'},
                    body: `username=${encodeURIComponent(username)}&email=${encodeURIComponent(email)}&password=${encodeURIComponent(password)}`
                });
                const data = await res.json();
                if (data.status === "success") {
                    showSuccess("Registered successfully!");
                    localStorage.setItem("username", username);
                    setTimeout(() => window.location.href = 'dashboard.html', 1000);
                } else {
                    showError(data.message || "Failed to register");
                }
            } catch {
                showError("Server error!");
            }
        }

        function handleGuestAccess() {
            localStorage.setItem("username", "guest");
            showSuccess("Guest Login Successful");
            setTimeout(() => window.location.href = 'dashboard.html', 1000);
        }

        // Default activate Login tab on load
        switchTab('password');
    </script>
</body>
</html>
